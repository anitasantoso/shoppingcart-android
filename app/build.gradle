apply plugin: 'com.android.application'
apply plugin: 'android-apt'

ext.daggerVersion = '1.2.1';
ext.androidAnnotationsVersion = '2.7';

configurations {
    apt
}

dependencies {

    // annotations
    apt "com.googlecode.androidannotations:androidannotations:${androidAnnotationsVersion}"
    compile "com.googlecode.androidannotations:androidannotations-api:${androidAnnotationsVersion}"
    apt "com.squareup.dagger:dagger-compiler:${daggerVersion}"
    compile "com.squareup.dagger:dagger:${daggerVersion}"

    // static libs
    compile fileTree(dir: 'libs', include: ['*.jar'])

//    compile 'com.google.android.gms:play-services:5.2.08'
//    compile 'com.google.code.gson:gson:2.2.4'
//    compile 'com.android.support:appcompat-v7:20.0.0'


    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.j256.ormlite:ormlite-core:4.48'
}

android {
    compileSdkVersion 20
    buildToolsVersion "20.0.0"

    defaultConfig {
        applicationId "au.com.exercise.shoppingcart"
        minSdkVersion 14
        targetSdkVersion 20
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

apt {
    arguments {
        androidManifestFile variant.processResources.manifestFile
        resourcePackageName 'au.com.exercise'
    }
}

// android annotations
android.applicationVariants.all { variant ->
    aptOutput = file("${project.buildDir}/generated/source/.apt_generated/${variant.dirName}")
    println "****************************"
    println "variant: ${variant.name}"
    println "manifest:  ${variant.processResources.manifestFile}"
    println "aptOutput:  ${aptOutput}"
    println "****************************"

    variant.javaCompile.doFirst {
        println "*** compile doFirst ${variant.name}"
        aptOutput.mkdirs()
        variant.javaCompile.options.compilerArgs += [
                '-processorpath', configurations.apt.getAsPath(),
                '-AandroidManifestFile=' + variant.processResources.manifestFile,
                '-s', aptOutput
        ]
    }
}